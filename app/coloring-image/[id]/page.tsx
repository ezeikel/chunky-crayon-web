import { getAllColoringImages, getColoringImage } from '@/app/actions';
import ColorPalette from '@/components/ColorPalette/ColorPalette';
import ImageCanvas from '@/components/ImageCanvas/ImageCanvas';
import PageWrap from '@/components/PageWrap/PageWrap';
import SaveButton from '@/components/buttons/SaveButton/SaveButton';

type ColoringImagePageProps = {
  params: {
    id: string;
  };
};

export const generateStaticParams = async () => {
  const images = await getAllColoringImages();

  return images.map((image) => ({
    params: {
      id: image.id,
    },
  }));
};

export const generateMetadata = async ({
  params: { id },
}: ColoringImagePageProps) => {
  const coloringImage = await getColoringImage(id);

  if (!coloringImage) {
    return null;
  }

  const title = `${coloringImage.title} - Chunky Crayon`;
  const description =
    `A coloring image featuring: ${coloringImage.description}` ||
    'Coloring book page generated by Chunky Crayon.';
  const keywords =
    coloringImage.tags?.join(',') ||
    'coloring book, AI art, generative art, coloring pages, digital coloring, creative app';

  return {
    title,
    description,
    keywords,
    icons: {
      icon: '/favicon.ico',
      shortcut: '/favicon-16x16.png',
      apple: '/apple-touch-icon.png',
    },
    openGraph: {
      title,
      description,
      url: 'https://chunkycrayon.com',
      siteName: 'Chunky Crayon',
      images: [
        {
          url:
            coloringImage.url || 'https://chunkycrayon.com/images/og-image.jpg',
          width: 1200,
          height: 630,
          alt:
            coloringImage.alt ||
            'Chunky Crayon AI-Generated Coloring Book Pages',
        },
      ],
      locale: 'en-GB',
      type: 'website',
    },
    twitter: {
      card: 'summary_large_image',
      title,
      description,
      images: [
        coloringImage.url || 'https://chunkycrayon.com/images/og-image.jpg',
      ],
    },
  };
};

const ColoringImagePage = async ({
  params: { id },
}: ColoringImagePageProps) => {
  const coloringImage = await getColoringImage(id);

  if (!coloringImage) {
    return null;
  }

  return (
    <PageWrap className='bg-gradient-to-br from-[#FFF2E6] to-[#FFE6CC]" justify-center items-center gap-y-32'>
      <div className="max-w-3xl w-full p-8 bg-[#FF8A65] rounded-lg shadow-lg">
        <div className="flex flex-col items-center text-center mb-8">
          <h1 className="font-dyna-puff text-5xl font-bold mb-2 text-white">
            {coloringImage.title}
          </h1>
          <div className="flex items-center gap-x-2 text-lg text-white font-mediu">
            by Chunky Crayon
          </div>
        </div>
        <div className="flex flex-col gap-y-4">
          <ColorPalette className="self-center" />
          <ImageCanvas
            coloringImage={coloringImage}
            className="rounded-lg shadow-lg bg-white overflow-hidden"
          />
          <SaveButton coloringImage={coloringImage} className="self-center" />
        </div>
      </div>
    </PageWrap>
  );
};

export default ColoringImagePage;
